AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simple API for crude anonymous Twitter clone. Data is stored in a DynamoDB resource.
Resources:

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.get
      Runtime: python3.6
      CodeUri: s3://ca-serverless-demo-py/twit.zip
      Policies: 
        - AmazonDynamoDBReadOnlyAccess
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          TWEET_TABLE: !Ref Table
      Events: 
        GetResource:
          Type: Api
          Properties:
            Path: /api/
            Method: get
        

  PostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.post
      Runtime: python3.6
      CodeUri: s3://ca-serverless-demo-py/twit.zip
      Policies: 
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          TWEET_TABLE: !Ref Table
      Events: 
        PostResource:
          Type: Api
          Properties:
            Path: /api/
            Method: post

 # https://www.youtube.com/watch?v=H4LM_jw5zzs
  # LambdaGetInvokePermission: 
  #   Type: "AWS::Lambda::Permission"
  #   Properties: 
  #     FunctionName: 
  #       Fn::GetAtt: 
  #         - "GetFunction"
  #         - "Arn"
  #     Action: "lambda:InvokeFunction"
  #     Principal: "apigateway.amazonaws.com"
  #     SourceArn: 
  #       #Fn::Sub: "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*"


  # LambdaPostInvokePermission: 
  #   Type: "AWS::Lambda::Permission"
  #   Properties: 
  #     FunctionName: 
  #       Fn::GetAtt: 
  #         - "PostFunction"
  #         - "Arn"
  #     Resource: 
  #       Fn::GetAtt: 
  #         - "PostFunction"
  #         - "Arn"
  #     Effect: Allow
  #     Action: "lambda:InvokeFunction"
  #     Principal: 
  #       Service: "apigateway.amazonaws.com"
  #     SourceArn: 
  #       Fn::Sub: "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${?}/*/*/*"

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - 
          AttributeName: "created"
          AttributeType: "N"
        - 
          AttributeName: "created_key"
          AttributeType: "N"

      KeySchema: 
        - 
          AttributeName: "created_key"
          KeyType: "HASH"
        - 
          AttributeName: "created"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"